{
  "version": "48.0.0",
  "artifacts": {
    "VpcStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "VpcStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "VpcStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/ap-northeast-1",
      "properties": {
        "templateFile": "VpcStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-ap-northeast-1/6dd58f276ace08b90bab8ee87e459048c21235a82093ad0b4cc6f468c45b00e7.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "VpcStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VpcStack.assets"
      ],
      "metadata": {
        "/VpcStack/MyVpc": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "ipAddresses": "*",
              "maxAzs": "*",
              "subnetConfiguration": [],
              "natGateways": "*"
            }
          }
        ],
        "/VpcStack/MyVpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyVpcF9F0CA6F"
          }
        ],
        "/VpcStack/MyVpc/RestrictDefaultSecurityGroupCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/VpcStack/MyVpc/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyVpcRestrictDefaultSecurityGroupCustomResourceA4FCCD62"
          }
        ],
        "/VpcStack/MyVpc/S3Endpoint": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "service": {
                "name": "*"
              },
              "subnets": [
                {
                  "subnets": [
                    "*",
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "/VpcStack/MyVpc/S3Endpoint/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyVpcS3EndpointC49880BF"
          }
        ],
        "/VpcStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/VpcStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/VpcStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/VpcStack/PublicSubnetA": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpcId": "*",
              "availabilityZone": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true
            }
          }
        ],
        "/VpcStack/PublicSubnetA/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetASubnet3D1343B6"
          }
        ],
        "/VpcStack/PublicSubnetA/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetARouteTable5125BE86"
          }
        ],
        "/VpcStack/PublicSubnetA/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetARouteTableAssociationD5E130F4"
          }
        ],
        "/VpcStack/PublicSubnetC": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpcId": "*",
              "availabilityZone": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true
            }
          }
        ],
        "/VpcStack/PublicSubnetC/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetCSubnet175E3284"
          }
        ],
        "/VpcStack/PublicSubnetC/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetCRouteTable3EAD8380"
          }
        ],
        "/VpcStack/PublicSubnetC/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnetCRouteTableAssociationA426FD4F"
          }
        ],
        "/VpcStack/PrivateSubnetA": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpcId": "*",
              "availabilityZone": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false
            }
          }
        ],
        "/VpcStack/PrivateSubnetA/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetASubnet0C8C29C1"
          }
        ],
        "/VpcStack/PrivateSubnetA/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetARouteTable6864ED5E"
          }
        ],
        "/VpcStack/PrivateSubnetA/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetARouteTableAssociationD4B26F64"
          }
        ],
        "/VpcStack/PrivateSubnetC": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpcId": "*",
              "availabilityZone": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false
            }
          }
        ],
        "/VpcStack/PrivateSubnetC/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetCSubnet439D5A9F"
          }
        ],
        "/VpcStack/PrivateSubnetC/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetCRouteTable306C20EB"
          }
        ],
        "/VpcStack/PrivateSubnetC/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnetCRouteTableAssociationBACCA87E"
          }
        ],
        "/VpcStack/InternetGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "InternetGateway"
          }
        ],
        "/VpcStack/VpcIgwAttach": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcIgwAttach"
          }
        ],
        "/VpcStack/PublicRouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicRouteTable"
          }
        ],
        "/VpcStack/PublicDefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicDefaultRoute"
          }
        ],
        "/VpcStack/PubSubnetA_RTA": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PubSubnetARTA"
          }
        ],
        "/VpcStack/PubSubnetC_RTA": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PubSubnetCRTA"
          }
        ],
        "/VpcStack/PrivateRouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateRouteTable"
          }
        ],
        "/VpcStack/PrivSubnetA_RTA": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivSubnetARTA"
          }
        ],
        "/VpcStack/PrivSubnetC_RTA": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivSubnetCRTA"
          }
        ],
        "/VpcStack/VpcId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcId"
          }
        ],
        "/VpcStack/PublicSubnets": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicSubnets"
          }
        ],
        "/VpcStack/PrivateSubnets": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateSubnets"
          }
        ],
        "/VpcStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"MyVpcF9F0CA6F\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefMyVpcF9F0CA6FBC8737E9"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"PrivateSubnetASubnet0C8C29C1\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefPrivateSubnetASubnet0C8C29C18A1DB0CD"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"PrivateSubnetCSubnet439D5A9F\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefPrivateSubnetCSubnet439D5A9F2269D6CA"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"PublicSubnetASubnet3D1343B6\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefPublicSubnetASubnet3D1343B61C9C52D5"
          }
        ],
        "/VpcStack/Exports/Output{\"Ref\":\"PublicSubnetCSubnet175E3284\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefPublicSubnetCSubnet175E3284C0A9E25D"
          }
        ],
        "/VpcStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/VpcStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "VpcStack"
    },
    "SecurityStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "SecurityStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "SecurityStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/ap-northeast-1",
      "properties": {
        "templateFile": "SecurityStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-ap-northeast-1/42360f7247768d41ad68271e9dcdaade74a0dc152a53466c5a120f1592bb60bf.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "SecurityStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VpcStack",
        "SecurityStack.assets"
      ],
      "metadata": {
        "/SecurityStack/AlbSg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": true
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          }
        ],
        "/SecurityStack/AlbSg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlbSg1155C1BE"
          }
        ],
        "/SecurityStack/EcsSg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": true
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          }
        ],
        "/SecurityStack/EcsSg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSg17B4B0B3"
          }
        ],
        "/SecurityStack/EcsSg/from SecurityStackAlbSg848EA823:80": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSgfromSecurityStackAlbSg848EA823803570DB0F"
          }
        ],
        "/SecurityStack/RdsSg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": true
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*"
              ]
            }
          }
        ],
        "/SecurityStack/RdsSg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSg7F9F43B6"
          }
        ],
        "/SecurityStack/RdsSg/from SecurityStackEcsSgC0494B04:3306": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSgfromSecurityStackEcsSgC0494B043306DC781192"
          }
        ],
        "/SecurityStack/EcsTaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "description": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/SecurityStack/EcsTaskRole/ImportEcsTaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/SecurityStack/EcsTaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsTaskRole8DFA0181"
          }
        ],
        "/SecurityStack/EcsTaskRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/SecurityStack/EcsTaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsTaskRoleDefaultPolicy50882C77"
          }
        ],
        "/SecurityStack/EcsExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          }
        ],
        "/SecurityStack/EcsExecutionRole/ImportEcsExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/SecurityStack/EcsExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsExecutionRoleFD93B7A2"
          }
        ],
        "/SecurityStack/EcsTaskRoleArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsTaskRoleArn"
          }
        ],
        "/SecurityStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/SecurityStack/Exports/Output{\"Fn::GetAtt\":[\"RdsSg7F9F43B6\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttRdsSg7F9F43B6GroupId133E31A8"
          }
        ],
        "/SecurityStack/Exports/Output{\"Fn::GetAtt\":[\"EcsTaskRole8DFA0181\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcsTaskRole8DFA0181Arn43EC6E0B"
          }
        ],
        "/SecurityStack/Exports/Output{\"Fn::GetAtt\":[\"EcsSg17B4B0B3\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcsSg17B4B0B3GroupIdF7EB5B8E"
          }
        ],
        "/SecurityStack/Exports/Output{\"Fn::GetAtt\":[\"AlbSg1155C1BE\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttAlbSg1155C1BEGroupIdF2A72E65"
          }
        ],
        "/SecurityStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/SecurityStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "SecurityStack"
    },
    "RdsStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "RdsStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "RdsStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/ap-northeast-1",
      "properties": {
        "templateFile": "RdsStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-ap-northeast-1/039bb719ce45ed803ba717df700cdf68426a1d7a43cf30af77e59076f50ee31e.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "RdsStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "VpcStack",
        "SecurityStack",
        "RdsStack.assets"
      ],
      "metadata": {
        "/RdsStack/RdsSecret": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "secretName": "*",
              "generateSecretString": {
                "secretStringTemplate": "*",
                "excludePunctuation": true,
                "includeSpace": false,
                "generateStringKey": "*"
              }
            }
          }
        ],
        "/RdsStack/RdsSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSecretB2B964C3"
          }
        ],
        "/RdsStack/RdsSecret/Attachment": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "secret": "*",
              "target": "*"
            }
          }
        ],
        "/RdsStack/RdsSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSecretAttachmentDFF91DCD"
          }
        ],
        "/RdsStack/RdsSubnetGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "vpcSubnets": {
                "subnets": [
                  "*",
                  "*"
                ]
              },
              "description": "*",
              "removalPolicy": "destroy"
            }
          }
        ],
        "/RdsStack/RdsSubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSubnetGroup"
          }
        ],
        "/RdsStack/AppRds": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "engine": {
                "engineType": "*",
                "singleUserRotationApplication": "*",
                "engineVersion": {
                  "fullVersion": "*",
                  "majorVersion": "*"
                },
                "parameterGroupFamily": "*",
                "engineFamily": "*",
                "supportsReadReplicaBackups": true
              },
              "vpc": "*",
              "vpcSubnets": {
                "subnets": [
                  "*",
                  "*"
                ]
              },
              "securityGroups": [
                "*"
              ],
              "credentials": "*",
              "allocatedStorage": "*",
              "storageType": "gp3",
              "multiAz": true,
              "subnetGroup": "*",
              "publiclyAccessible": false,
              "backupRetention": "*",
              "deletionProtection": false,
              "removalPolicy": "destroy"
            }
          }
        ],
        "/RdsStack/AppRds/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AppRdsE6D3399A"
          }
        ],
        "/RdsStack/RdsEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsEndpoint"
          }
        ],
        "/RdsStack/RdsSecretArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsSecretArn"
          }
        ],
        "/RdsStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/RdsStack/Exports/Output{\"Ref\":\"AppRdsE6D3399A\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefAppRdsE6D3399A2CC540F6"
          }
        ],
        "/RdsStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/RdsStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "RdsStack"
    },
    "ServiceStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "ServiceStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "ServiceStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/ap-northeast-1",
      "properties": {
        "templateFile": "ServiceStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-ap-northeast-1/0d461e30171c0fe07a964dde2800962239cded0391b05514e95025be8a20866d.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "ServiceStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "SecurityStack",
        "VpcStack",
        "ServiceStack.assets"
      ],
      "metadata": {
        "/ServiceStack/EcsCluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*"
            }
          }
        ],
        "/ServiceStack/EcsCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsCluster97242B84"
          }
        ],
        "/ServiceStack/ExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/ServiceStack/ExecutionRole/ImportExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ServiceStack/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExecutionRole605A040B"
          }
        ],
        "/ServiceStack/ExecutionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ServiceStack/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExecutionRoleDefaultPolicyA5B92313"
          }
        ],
        "/ServiceStack/TaskDef": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ServiceStack/TaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDef54694570"
          }
        ],
        "/ServiceStack/AppLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "retention": 7,
              "removalPolicy": "destroy"
            }
          }
        ],
        "/ServiceStack/AppLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AppLogGroup7D8CD952"
          }
        ],
        "/ServiceStack/FargateService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new ServiceStack (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/lib/service-stack.ts:55:21)",
              "Object.<anonymous> (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/bin/Deploy.ts:30:22)",
              "Module._compile (node:internal/modules/cjs/loader:1738:14)",
              "Module.m._compile (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/index.ts:1618:23)",
              "node:internal/modules/cjs/loader:1871:10",
              "Object.require.extensions.<computed> [as .ts] (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1470:32)",
              "Module._load (node:internal/modules/cjs/loader:1290:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:322:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:238:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "phase4 (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/sogashunsuke/ドキュメント/AWS_CDK/my-project/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1738:14)",
              "Object.<anonymous> (node:internal/modules/cjs/loader:1871:10)",
              "Module.load (node:internal/modules/cjs/loader:1470:32)",
              "Module._load (node:internal/modules/cjs/loader:1290:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:322:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:238:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "node:internal/main/run_main_module:33:47"
            ]
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ServiceStack/FargateService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FargateServiceAC2B3B85"
          }
        ],
        "/ServiceStack/FargateService/ScalingRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "serviceNamespace": "ecs",
              "scalableDimension": "*",
              "resourceId": "*",
              "role": "*",
              "minCapacity": "*",
              "maxCapacity": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "scaleToTrackMetric": [
                "*",
                {
                  "predefinedMetric": "*",
                  "policyName": "*",
                  "disableScaleIn": "*",
                  "targetValue": "*",
                  "scaleInCooldown": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "scaleOnMetric": [
                "*",
                {
                  "metric": {
                    "warnings": "*"
                  },
                  "scalingSteps": [
                    {
                      "upper": "*",
                      "change": "*"
                    },
                    {
                      "lower": "*",
                      "change": "*"
                    }
                  ],
                  "adjustmentType": "ChangeInCapacity"
                }
              ]
            }
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FargateServiceTaskCountTarget8CF96FEA"
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target/CpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FargateServiceTaskCountTargetCpuScaling086750CA"
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target/PendingTasksScaling/UpperPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FargateServiceTaskCountTargetPendingTasksScalingUpperPolicy65BAF141"
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target/PendingTasksScaling/UpperAlarm": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "metric": {
                "warnings": "*"
              },
              "alarmDescription": "*",
              "comparisonOperator": "*",
              "evaluationPeriods": "*",
              "datapointsToAlarm": "*",
              "threshold": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAlarmAction": [
                {}
              ]
            }
          }
        ],
        "/ServiceStack/FargateService/TaskCount/Target/PendingTasksScaling/UpperAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FargateServiceTaskCountTargetPendingTasksScalingUpperAlarm84C19AF1"
          }
        ],
        "/ServiceStack/AppALB": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ServiceStack/AppALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AppALBDBE7026A"
          }
        ],
        "/ServiceStack/AppALB/HttpListener": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ServiceStack/AppALB/HttpListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AppALBHttpListener82C680E9"
          }
        ],
        "/ServiceStack/AppTG/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AppTG218EBF05"
          }
        ],
        "/ServiceStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/ServiceStack/Exports/Output{\"Ref\":\"EcsCluster97242B84\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefEcsCluster97242B84553A5D8F"
          }
        ],
        "/ServiceStack/Exports/Output{\"Fn::GetAtt\":[\"FargateServiceAC2B3B85\",\"Name\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2"
          }
        ],
        "/ServiceStack/Exports/Output{\"Ref\":\"AppALBHttpListener82C680E9\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefAppALBHttpListener82C680E91A33606C"
          }
        ],
        "/ServiceStack/Exports/Output{\"Fn::GetAtt\":[\"AppTG218EBF05\",\"TargetGroupFullName\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttAppTG218EBF05TargetGroupFullName4F43E5AC"
          }
        ],
        "/ServiceStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/ServiceStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "ServiceStack"
    },
    "MonitoringStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "MonitoringStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "MonitoringStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/ap-northeast-1",
      "properties": {
        "templateFile": "MonitoringStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-ap-northeast-1/4a797459da902bb152e35a40df29978a0de31ea8ec4ad7a4ea9f5753ecf3d70c.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "MonitoringStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "ServiceStack",
        "RdsStack",
        "MonitoringStack.assets"
      ],
      "metadata": {
        "/MonitoringStack/AlarmTopic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/MonitoringStack/AlarmTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlarmTopicD01E77F9"
          }
        ],
        "/MonitoringStack/EcsCpuAlarm": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "metric": {
                "warnings": "*"
              },
              "threshold": "*",
              "evaluationPeriods": "*",
              "comparisonOperator": "*",
              "treatMissingData": "notBreaching"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAlarmAction": [
                {}
              ]
            }
          }
        ],
        "/MonitoringStack/EcsCpuAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsCpuAlarm1D439C07"
          }
        ],
        "/MonitoringStack/EcsPendingAlarm": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "metric": {
                "warnings": "*"
              },
              "threshold": "*",
              "evaluationPeriods": "*",
              "comparisonOperator": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAlarmAction": [
                {}
              ]
            }
          }
        ],
        "/MonitoringStack/EcsPendingAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsPendingAlarm54523054"
          }
        ],
        "/MonitoringStack/Alb5xxAlarm": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "metric": {
                "warnings": "*"
              },
              "threshold": "*",
              "evaluationPeriods": "*",
              "comparisonOperator": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAlarmAction": [
                {}
              ]
            }
          }
        ],
        "/MonitoringStack/Alb5xxAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Alb5xxAlarm99BFF946"
          }
        ],
        "/MonitoringStack/RdsStorageAlarm": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "metric": {
                "warnings": "*"
              },
              "threshold": "*",
              "evaluationPeriods": "*",
              "comparisonOperator": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAlarmAction": [
                {}
              ]
            }
          }
        ],
        "/MonitoringStack/RdsStorageAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RdsStorageAlarm879B47F1"
          }
        ],
        "/MonitoringStack/AlarmTopicArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AlarmTopicArn"
          }
        ],
        "/MonitoringStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/MonitoringStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/MonitoringStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "MonitoringStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1028.0"
}